import"./vendor.0dd1e043.js";!function(t=".",e="__import__"){try{self[e]=new Function("u","return import(u)")}catch(s){const i=new URL(t,location),a=t=>{URL.revokeObjectURL(t.src),t.remove()};self[e]=t=>new Promise(((s,h)=>{const r=new URL(t,i);if(self[e].moduleMap[r])return s(self[e].moduleMap[r]);const d=new Blob([`import * as m from '${r}';`,`${e}.moduleMap['${r}']=m;`],{type:"text/javascript"}),n=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(d),onerror(){h(new Error(`Failed to import: ${t}`)),a(n)},onload(){s(self[e].moduleMap[r]),a(n)}});document.head.appendChild(n)})),self[e].moduleMap={}}}("/assets/");class t extends Phaser.Scene{constructor(){super({key:"BootScene"}),this.destroyCard=!1,this.timeCardIsVisible=800,this.timeToComplete=20,this.maxAttempts=null}preload(){this.load.script("webfont","https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js"),this.load.image("back","../../assets/images/back.png"),this.load.image("bear","../../assets/images/bear.png"),this.load.image("eagle","../../assets/images/eagle.png"),this.load.image("koala","../../assets/images/koala.png"),this.load.image("parrot","../../assets/images/parrot.png"),this.load.image("PT_flag","../../assets/images/pt.png"),this.load.image("DE_flag","../../assets/images/de.jpg"),this.load.image("1","../../assets/images/1.jpg"),this.load.image("1","../../assets/images/2.png"),this.load.image("1","../../assets/images/3.jpg"),this.load.image("star","../../assets/images/star.png")}create(){this.scene.start("GameScene",{destroyCard:this.destroyCard,timeCardIsVisible:this.timeCardIsVisible,imagesArr:["bear","eagle","koala"],timeToComplete:this.timeToComplete,maxAttempts:this.maxAttempts})}}let e={TOTAL:0,CURRENT:0,ATTEMPTS:0,MAX_ATTEMPTS:0,TIME:0,GAME_OVER:!1};class s{constructor(t,e,s,i,a,h){this.flipSpeed=200,this.flipZoom=1.1,this.cardIsBack=!0,this.scene=t,this.cardW=e,this.cardH=s,this.cardImgRef=i,this.cardFrontTexture=a,this.cardBackTexture=h,this.buildCard()}buildCard(){this.cardBack=this.scene.add.image(0,0,this.cardBackTexture).setOrigin(0).setVisible(!1);let t=this.scene.add.image(0,0,this.cardFrontTexture).setOrigin(0).setVisible(!1);this.scaleX_Back=this.cardW/this.cardBack.width,this.scaleY_Back=this.cardH/this.cardBack.height;let e=this.cardW/t.width,s=this.cardH/t.height;this.cardBack.setScale(this.scaleX_Back,this.scaleY_Back),t.setScale(e,s);let i=this.scene.make.renderTexture({width:this.cardW,height:this.cardH},!1);i.draw(this.cardBack,0,0).saveTexture("card_back"),i=this.scene.make.renderTexture({width:this.cardW,height:this.cardH},!1),i.draw(t,0,0).saveTexture("card_front_"+this.cardFrontTexture)}placeCard(t,e){let s=this.scaleX_Back*this.cardBack.width/2,i=this.scaleX_Back*this.cardBack.height/2;this.cardBack=this.scene.add.image(t+s,e+i,"card_back").setInteractive()}flipCard(){this.cardBack.disableInteractive(),this.cardIsBack=!this.cardIsBack,this.flipTween=this.scene.tweens.add({targets:this.cardBack,scaleY:this.flipZoom,scaleX:.1,duration:this.flipSpeed,ease:"Power1",yoyo:!0,onComplete:()=>this.onCompleteHandler(this.cardBack),onYoyo:()=>this.onCardComeBack(this.cardBack)})}onCardComeBack(t){this.cardIsBack?t.setTexture("card_back"):t.setTexture("card_front_"+this.cardFrontTexture)}onCompleteHandler(t){this.cardBack.setInteractive()}newCardPosition(t,e){this.cardX=t,this.cardY=e}getCard(){return this.cardBack}getCardImgRef(){return this.cardImgRef}getCardIsBack(){return this.cardIsBack}}class i{constructor(t,e,s){this.scene=t,this.gameWidth=e,this.gameHeight=s,this.barBody=new Phaser.GameObjects.Graphics(this.scene),this.barHeightScale=8,this.barColor=170,this.barStrokeColor=16763904,this.buildBar()}buildBar(){this.barBody=this.scene.add.graphics(),this.barBody.beginPath(),this.barBody.fillStyle(this.barStrokeColor,1),this.barBody.fillRoundedRect(0,0,this.gameWidth,this.gameHeight/(this.barHeightScale-.3),{tl:0,tr:0,bl:20,br:20}),this.barBody.strokePath(),this.barBody.closePath(),this.barBody.beginPath(),this.barBody.fillStyle(this.barColor,1),this.barBody.fillRoundedRect(0,0,this.gameWidth,this.gameHeight/this.barHeightScale,{tl:0,tr:0,bl:24,br:24}),this.barBody.strokePath(),this.barBody.closePath()}getHeight(){return this.gameHeight/this.barHeightScale}}class a{constructor(t,e,s,i){this.gapInBetween=50,this.gapSide=100,this.scene=t,this.boardW=e-2*this.gapSide,this.centerGridOffsetY=i,this.boardH=s-this.centerGridOffsetY-2*this.gapSide}doGridCalculations(t,e){this.numCardsW=t,this.numCardsH=e;return{width:this.boardW/t-this.gapInBetween,height:this.boardH/e-this.gapInBetween}}createGrid(t,e,s){let i=0;for(let a=0;a<this.numCardsH;a++)for(let h=0;h<this.numCardsW;h++)t[i].placeCard(h*(e+this.gapInBetween)+this.gapSide+this.gapInBetween/2,a*(s+this.gapInBetween)+this.centerGridOffsetY+this.gapSide),i++;console.log(s/2),console.log(t)}}class h extends Phaser.Scene{constructor(){super({key:"GameScene"}),this.cards=[],this.matches=0,this.flippedCardsIndex=[]}init(t){switch(this.gameHeight=this.sys.canvas.height,this.gameWidth=this.sys.canvas.width,this.destroyCard=t.destroyCard,this.timeCardIsVisible=t.timeCardIsVisible,this.imagesArr=t.imagesArr,this.timeToComplete=t.timeToComplete,this.maxAttempts=t.maxAttempts,this.imagesArr.length){case 3:this.numCardsHorizontal=3,this.numCardsVertical=2;break;case 6:this.numCardsHorizontal=4,this.numCardsVertical=3;break;case 8:this.numCardsHorizontal=4,this.numCardsVertical=4;break;case 10:this.numCardsHorizontal=5,this.numCardsVertical=4}}create(){this.topBar=new i(this,this.gameWidth,this.gameHeight),this.grid=new a(this,this.gameWidth,this.gameHeight,this.topBar.getHeight());const{width:t,height:h}=this.grid.doGridCalculations(this.numCardsHorizontal,this.numCardsVertical),r=[];this.imagesArr.forEach(((t,e)=>{r.push(e),r.push(e)})),(t=>{for(var e,s,i=t.length;0!==i;)s=Math.floor(Math.random()*i),e=t[i-=1],t[i]=t[s],t[s]=e;return t})(r).forEach(((e,i)=>this.cards.push(new s(this,t,h,e,this.imagesArr[e],"PT_flag")))),this.grid.createGrid(this.cards,t,h),this.input.on("gameobjectdown",this.cardDown,this),e.TOTAL=this.imagesArr.length;let d="";this.timeToComplete?(this.displayText="Tempo para acabar o jogo\n",e.TIME=this.timeToComplete,d=`${this.displayText}${e.TIME}`,this.timedEvent=this.time.delayedCall(1e3*this.timeToComplete,this.onEventTimeOver,[],this)):this.maxAttempts?(this.displayText="Tentativas restantes para acabar o jogo\n",e.MAX_ATTEMPTS=this.maxAttempts,d=`${this.displayText}${e.MAX_ATTEMPTS}`):(this.displayText="Tentativas\n",d=`${this.displayText}${e.ATTEMPTS}`),this.text=this.add.text(0,16,d,{fontFamily:"Arial",fontSize:32,color:"#ffffff",align:"center"}),this.text.setPosition(this.gameWidth/2-this.text.width/2,this.topBar.getHeight()/2-this.text.height/2)}cardDown(t,s,i){const a=this.cards.find((t=>t.getCard()===s));if(a&&this.flippedCardsIndex.length<2&&a.getCardIsBack()&&!e.GAME_OVER){a.flipCard();const t=this.cards.findIndex((t=>t.getCard()===s)),e=a.getCardImgRef();this.flippedCardsIndex.push({index:t,imageRef:e}),2===this.flippedCardsIndex.length&&this.time.delayedCall(this.timeCardIsVisible,this.checkPairMatch,[],this)}}checkPairMatch(){const t=this.flippedCardsIndex[0],s=this.flippedCardsIndex[1];(null==t?void 0:t.imageRef)===(null==s?void 0:s.imageRef)?(console.log("match!!"),this.flippedCardsIndex.forEach((t=>{this.destroyCard?this.cards[t.index].getCard().setVisible(!1):this.cards[t.index].getCard().disableInteractive()})),this.matches++,this.matches===this.imagesArr.length&&(e.GAME_OVER=!0,this.scene.launch("GameWinScene",{width:this.gameWidth,height:this.gameHeight,win:!0}))):(console.log("try again"),this.flippedCardsIndex.forEach((t=>{this.cards[t.index].flipCard()}))),this.maxAttempts?(e.MAX_ATTEMPTS--,this.text.setText(`${this.displayText}${e.MAX_ATTEMPTS}`),0===e.MAX_ATTEMPTS&&(e.GAME_OVER=!0)):(e.ATTEMPTS++,this.text.setText(`${this.displayText}${e.ATTEMPTS}`)),this.flippedCardsIndex=[]}onEventTimeOver(){console.log("time over"),e.GAME_OVER=!0,this.scene.launch("GameWinScene",{width:this.gameWidth,height:this.gameHeight,win:!1})}update(){this.timeToComplete&&!e.GAME_OVER&&this.text.setText(`${this.displayText}${(this.timeToComplete-this.timedEvent.elapsed/1e3).toFixed(0)}`)}}class r{constructor(t,e,s,i,a,h){this.scene=t,this.barColor=170,this.barStrokeColor=16763904,this.buildMenu(e,s,i,a,h)}buildMenu(t,e,s,i,a){this.menuRect=this.scene.add.graphics(),this.menuRect.beginPath(),this.menuRect.fillStyle(this.barStrokeColor,1),this.menuRect.fillRoundedRect(t-a/2,e-a/2,s+a,i+a,{tl:20,tr:20,bl:20,br:20}),this.menuRect.strokePath(),this.menuRect.closePath(),this.menuRect.beginPath(),this.menuRect.fillStyle(this.barColor,1),this.menuRect.fillRoundedRect(t,e,s,i,{tl:20,tr:20,bl:20,br:20}),this.menuRect.strokePath(),this.menuRect.closePath()}getMenuRect(){return this.menuRect}}class d extends Phaser.Scene{constructor(){super({key:"GameWinScene"})}init(t){this.gameWidth=t.width,this.gameHeight=t.height,this.win=t.win}create(){this.modal=this.add.rectangle(0,0,this.gameWidth,this.gameHeight,0,.6).setOrigin(0);const t=.5*this.gameWidth,e=.5*this.gameHeight,s=this.gameWidth/2-t/2,i=this.gameHeight/2-e/2,a=.015*t;this.menu=new r(this,s,i,t,e,a);let h="";h=this.win?"Parabéns, ganhaste!":"Não conseguiste, tenta outra vez!";let d=this.add.text(0,0,h,{fontFamily:"Arial",fontSize:32,color:"#ffffff",align:"center"});d.setPosition(this.gameWidth/2,i+2*d.height).setOrigin(.5);var n=new Phaser.Geom.Circle(this.gameWidth/2,i+e/2.2,(e-i)/2.1).getPoints(12);let o=0;for(var c=0;c<n.length;c++){var l=n[c];o>n.length-2?o=0:o++;let t=this.add.image(l.x,l.y,"star").setScale(.1).setTint(16763904);this.tweens.add({targets:t,scaleX:.15625,scaleY:.15625,ease:"Sine.easeInOut",duration:1e3,repeat:-1,yoyo:!0})}this.btn=this.add.graphics(),this.btn.fillStyle(16776960,1);const m=t/2,g=e/8,p=this.gameWidth/2-t/4,u=i+.8*e;this.btn.fillRoundedRect(p,u,m,g,24),this.add.text(0,0,"Jogar novamente",{fontFamily:"Arial",fontSize:32,color:"#0000aa",align:"center"}).setPosition(this.gameWidth/2,u+d.height).setOrigin(.5);var f=new Phaser.Geom.Rectangle(p,u,m,g);this.btn.setInteractive(f,Phaser.Geom.Rectangle.Contains),this.btn.on("pointerdown",(()=>{window.location.reload()}))}}const n={type:Phaser.AUTO,parent:"game",backgroundColor:2772329,scale:{width:1600,height:1200,mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},fps:{target:20,forceSetTimeOut:!0},scene:[t,h,d]};class o extends Phaser.Game{constructor(t){super(t)}}window.addEventListener("load",(()=>{new o(n)}));
