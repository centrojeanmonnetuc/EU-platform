import{a as e}from"./vendor.daadd3da.js";!function(e=".",t="__import__"){try{self[t]=new Function("u","return import(u)")}catch(i){const s=new URL(e,location),h=e=>{URL.revokeObjectURL(e.src),e.remove()};self[t]=e=>new Promise(((i,a)=>{const o=new URL(e,s);if(self[t].moduleMap[o])return i(self[t].moduleMap[o]);const c=new Blob([`import * as m from '${o}';`,`${t}.moduleMap['${o}']=m;`],{type:"text/javascript"}),n=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(c),onerror(){a(new Error(`Failed to import: ${e}`)),h(n)},onload(){i(self[t].moduleMap[o]),h(n)}});document.head.appendChild(n)})),self[t].moduleMap={}}}("/assets/");class t extends Phaser.Scene{constructor(){super({key:"BootScene"})}init(){const e=window.location.search,t=new URLSearchParams(e);this.gameId=t.get("id")}async preload(){this.load.script("webfont","https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js");const t="/api/games/game/"+this.gameId;await e.get(t).then((e=>{this.load.audio("select","assets/sounds/select.mp3"),this.load.audio("drop_piece","assets/sounds/drop.mp3"),this.load.audio("right_place","assets/sounds/right_place.mp3"),this.load.audio("complete_puzzle","assets/sounds/complete.mp3"),this.load.image("bg","assets/images/bg.jpg"),this.load.image("star","assets/images/star.png"),this.load.image("hourglass","assets/images/hourglass.png"),console.log(e.data);const t=e.data.config;this.piecesSize=t.pieces_size,this.movePiecesFreely=t.move_pieces_freely,this.piecePositionHelper=t.piece_position_helper,this.backgroundPuzzleImage=t.background_puzzle_image,this.timer=t.timer,this.timeToComplete=t.time_to_complete;const i=e.data.assets.puzzle_image;this.puzzleImage=i,this.load.on("complete",(()=>this.createCustom())),this.load.image(i.id,""+i.path+i.server_path),this.load.start()})).catch((function(e){console.log(e)}))}createCustom(){this.scene.start("GameScene",{timer:this.timer,timeToComplete:this.timeToComplete,piecesSize:this.piecesSize,puzzleImage:this.puzzleImage,piecePositionHelper:this.piecePositionHelper,backgroundPuzzleImage:this.backgroundPuzzleImage,movePiecesFreely:this.movePiecesFreely})}}let i={TOTAL:0,CURRENT:0,ATTEMPTS:0,MAX_ATTEMPTS:0,TIME:0,GAME_OVER:!1,CURRENT_PIECES:0,TOTAL_PIECES:0};const s=(e,t,i)=>{let s=1,h=1;s=e/i.width,h=t/i.height;let a=Math.min(Number(s.toFixed(3)),Number(h.toFixed(3)));return i.setScale(a).setSize(Math.floor(i.width*a),Math.floor(i.height*a)),i.setData("scaled_value",a),i.setData("scaled_w",Math.floor(i.width*a)),i.setData("scaled_h",Math.floor(i.height*a)),i};class h{constructor(e,t,i,s,h,a,o){this.puzzlePercW=.7,this.piecesPercW=.3,this.imageAlpha=.2,this.gapInBetween=50,this.gapSide=20,this.scene=e,this.boardW=t,this.boardH=i,this.puzzleW=t*s-2*this.gapSide,this.puzzleH=i*h-2*this.gapSide,this.image=this.addImage(a,o?.3:0,!0,.5),this.setImagePos(this.image,this.boardW/2,this.boardH/2);const c=this.image.getBounds();this.generateImageShadow(c),this.imageAux=this.addImage(a,1,!1,0),this.setImagePos(this.imageAux,this.boardW/2-this.imageAux.width/2,this.boardH/2-this.imageAux.height/2)}generateImageShadow(e){const t=this.scene.add.graphics();t.beginPath(),t.fillStyle(0,.4),t.fillRoundedRect(e.left-4,e.top-4,e.width+8,e.height+8,{tl:6,tr:6,bl:6,br:6}),t.strokePath(),t.closePath(),t.setDepth(-3),t.beginPath(),t.fillStyle(16777215,.85),t.fillRoundedRect(e.left,e.top,e.width,e.height,{tl:0,tr:0,bl:0,br:0}),t.strokePath(),t.closePath()}addImage(e,t,i,h){var a=this.scene.add.image(0,0,e).setInteractive().setAlpha(t).setVisible(i).setOrigin(h).setDepth(-2);return a=s(this.puzzleW,this.puzzleH,a)}setImagePos(e,t,i){e.setPosition(t,i)}calculatePuzzlePieces(e){return{horizontal:Math.floor((this.puzzleW-2*this.gapSide)/e),vertical:Math.floor((this.puzzleH-2*this.gapSide)/e)}}calculatePieceDimensions(e,t){return{width:this.image.width/e,height:this.image.height/t}}getImage(){return this.image}getImageAux(){return this.imageAux}getPiecesPercW(){return this.piecesPercW}getPiecesBoardDimensions(){return{x:this.puzzleW+2*this.gapSide,y:this.centerGridOffsetY+this.gapSide,width:this.boardW-this.gapSide,height:this.boardH-this.gapSide}}}class a{constructor(e,t,i,s,h){this.scene=e,this.piece=t,this.image=i,this.scaledValue=s,this.boardPos=h,this.bindPieceWithImage()}scaleDownPiece(e){let t=1;e&&(t=this.scaledValue),this.image.setScale(t),this.piece.setScale(t)}bindPieceWithImage(){this.image.setData("line",this.boardPos.lineIndex),this.image.setData("col",this.boardPos.columnIndex),this.image.setInteractive({draggable:!0}),this.image.setDepth(2),this.piece.setDepth(1),this.image.setMask(this.piece.createBitmapMask())}setPiecePosition(e){this.image.setPosition(e.x,e.y),this.piece.setPosition(e.x,e.y)}setInitCoords(e){this.initCoords=e}getPieceImage(){return this.image}setPieceDepth(e){this.image.setDepth(e),this.piece.setDepth(e)}getInitCoords(){return this.initCoords}}class o{constructor(e,t,i,s,h,a,o,c){this.piecesRightLockCoors=[],this.scene=e,this.numHorizontalPieces=t,this.numVerticalPieces=i,this.pieceW=s,this.pieceH=h,this.pieceRadius=a,this.pieceScaleValue=o,this.piecesBoardDimensions=c}generatePiecesInPuzzleBoard(e,t,i){var s,h,a,o,c,n=[],r=[],l=e.getTopLeft();for(let p=0;p<this.numVerticalPieces;p++){for(let i=0;i<this.numHorizontalPieces;i++){0==p?(h=0,0==i?(a=-1,o=1,c=0):-1==n[i-1].r?(a=1,o=-1,c=1):(a=-1,o=1,c=-1)):1==r[p-1][i].b?(h=-1,o=-1,a=1,c=1):(h=1,o=1,a=-1,c=-1),0==i?c=0:i==this.numHorizontalPieces-1&&(a=0),p==this.numVerticalPieces-1&&(o=0);let d=0,g=0;1===c&&(d+=this.pieceRadius/2),1===a&&(d-=this.pieceRadius/2),1===h&&(g+=this.pieceRadius/2),1===o&&(g-=this.pieceRadius/2);const u=e.getTopLeft().x+i*this.pieceW+this.pieceW/2-d,f=e.getTopLeft().y+p*this.pieceH+this.pieceH/2-g,m={x:u,y:f};if(this.piecesRightLockCoors.push(m),t){const e=`piece_${h}_${a}_${o}_${c}`;this.scene.add.image(u,f,e).setAlpha(.3)}s={t:h,r:a,b:o,l:c,pos_x:l.x+i*this.pieceW,pos_y:l.y+p*this.pieceH},n.push(s)}r.push(n),n=[]}return this.piecesInfoArr=r,this.piecesRightLockCoors}generateOutsidePieces(e){var t,i,s,h,o,c=[];for(let n=0;n<this.numVerticalPieces;n++)for(let r=0;r<this.numHorizontalPieces;r++){o=this.piecesInfoArr[n][r],i=this.pieceH,h=n*this.pieceH,1==o.t&&(i+=this.pieceRadius,h-=this.pieceRadius),1==o.b&&(i+=this.pieceRadius),t=this.pieceW,s=r*this.pieceW,1==o.r&&(t+=this.pieceRadius),1==o.l&&(t+=this.pieceRadius,s-=this.pieceRadius),this.scene.make.renderTexture({width:t,height:i},!1).draw(e,-s,-h).saveTexture("piece["+n+","+r+"]");const l=this.scene.add.image(t/2,i/2,"piece["+n+","+r+"]").setOrigin(.5),p=`piece_${o.t}_${o.r}_${o.b}_${o.l}`,d=this.scene.add.image(t/2,i/2,p),g=new a(this.scene,d,l,this.pieceScaleValue,{lineIndex:n,columnIndex:r});g.scaleDownPiece(!0),c.push(g)}return c}}const c=(e,t)=>Math.floor(Math.random()*(t-e+1))+e;class n{constructor(e,t,i,s,h,a){this.limitTrys=20,this.scene=e,this.gapW=t,this.gapH=i,this.container1=s,this.container2=h,this.pieces=a,this.putPiecesInContainers()}putPiecesInContainers(){let e,t,i=[];for(let s=0;s<this.pieces.length;s++){e=0;do{t=this.getRandomContainerPos()}while(++e<this.limitTrys&&this.verifyOverlap(t,i));const h={x:t.x,y:t.y};i.push(h),this.pieces[s].setInitCoords(h),this.pieces[s].setPiecePosition(h)}}getRandomContainerPos(){let e,t;return 1===c(1,2)?(e=c(this.container1.x,this.container1.width),t=c(this.container1.y,this.container1.height)):(e=c(this.container2.x,this.container2.width),t=c(this.container2.y,this.container2.height)),{x:e,y:t}}verifyOverlap(e,t){for(let i=0;i<t.length;i++)if(e.x>t[i].x-this.gapW&&e.x<t[i].x+this.gapW&&e.y>t[i].y-this.gapH&&e.y<t[i].y+this.gapH)return console.log("overlap"),!0;return!1}}class r{constructor(e,t,i){this.endingColor=16711680,this.scene=e,this.clockImage=this.scene.add.image(0,0,"hourglass"),this.clockImage=s(t,i,this.clockImage),this.timeContainer=this.scene.add.container(),this.text=this.scene.add.text(0,16,"100",{fontFamily:"Arial",fontSize:64,color:"#ffffff",align:"center"}),this.text.setPosition(this.clockImage.getBounds().right+20,this.clockImage.y),this.text.setOrigin(0,.5),this.timeContainer.add(this.clockImage),this.timeContainer.add(this.text);const h=this.clockImage.getBounds().left+this.text.getBounds().right;this.timeContainer.setPosition(t/2-h/2,i)}updateTime(e){12===parseInt(e)&&this.shakeImage(),parseInt(e)<=10&&this.text.setTint(this.endingColor),this.text.setText(e)}shakeImage(){this.scene.tweens.add({targets:this.clockImage,duration:500,ease:"Sine.easeInOut",yoyo:!0,repeat:-1,scale:this.clockImage.getData("scaled_value")+.2*this.clockImage.getData("scaled_value")})}cancelAnims(){this.scene.tweens.destroy()}}class l{constructor(e,t,i,s){this.scene=e,this.backgroundImage=this.scene.add.image(0,0,t).setDepth(-10),this.backgroundImage=this.fitImage(this.backgroundImage,i,s)}fitImage(e,t,i){return(e=s(1.3*t,i,e)).setOrigin(0),e}setAlpha(e){this.backgroundImage.setAlpha(e)}}class p{constructor(e,t,i,s,h){this.offsetX=0,this.offsetY=0,this.lineWidth=.5,this.fillColor=6908265,this.scene=e,this.pieceW=t,this.pieceH=i,this.pieceRadius=s,this.generator(h)}generator(e){this.pieceGraphic=this.scene.add.graphics();const t=e.length;let i=[];for(let s=0;s<t;s++){i.push(e[s]);for(let h=0;h<t;h++){i.push(e[h]);for(let a=0;a<t;a++){i.push(e[a]);for(let o=0;o<t;o++){if(i.push(e[o]),!this.verifyRepeatedNumbers(i)){const t={top:e[s],right:e[h],bottom:e[a],left:e[o]};this.setOffset(t),this.drawPiece(this.pieceW/2,this.pieceH/2,e[s],e[h],e[a],e[o],-1,!1)}i.pop()}i.pop()}i.pop()}i.pop()}}verifyRepeatedNumbers(e){let t=0,i=0,s=0;for(let h=0;h<e.length;h++)-1===e[h]?t++:0===e[h]?i++:1===e[h]&&s++;return t>2||i>2||s>2}setOffset(e){this.offsetX=0,this.offsetY=0,1===e.top&&(this.offsetY+=this.pieceRadius),1===e.left&&(this.offsetX+=this.pieceRadius)}drawPiece(e,t,i,s,h,a,o,c){var n,r,l,p,d=this.scene.add.path(e,t);const g=.4,u=.6,f=.3,m=.5,P=.7;var w,H,z,R,I,W;0==i?(n=new Phaser.Math.Vector2(this.offsetX,this.offsetY),r=new Phaser.Math.Vector2(this.offsetX+this.pieceW,this.offsetY),l=new Phaser.Curves.Line(n,r),d.add(l)):(n=new Phaser.Math.Vector2(this.offsetX,this.offsetY),r=new Phaser.Math.Vector2(this.offsetX+this.pieceW*g,this.offsetY),l=new Phaser.Curves.Line(n,r),d.add(l),n=new Phaser.Math.Vector2(this.offsetX+this.pieceW*u,this.offsetY),r=new Phaser.Math.Vector2(this.offsetX+this.pieceW,this.offsetY),p=new Phaser.Curves.Line(n,r),d.add(p),H=new Phaser.Math.Vector2(this.offsetX+this.pieceW*g,this.offsetY),z=new Phaser.Math.Vector2(this.offsetX+this.pieceW*f,this.offsetY-i*this.pieceRadius/2),R=new Phaser.Math.Vector2(this.offsetX+this.pieceW*m,this.offsetY-i*this.pieceRadius),I=new Phaser.Math.Vector2(this.offsetX+this.pieceW*P,this.offsetY-i*this.pieceRadius/2),W=new Phaser.Math.Vector2(this.offsetX+this.pieceW*u,this.offsetY),w=new Phaser.Curves.Spline([H,z,R,I,W]),d.add(w)),0==s?(n=new Phaser.Math.Vector2(this.offsetX+this.pieceW,this.offsetY),r=new Phaser.Math.Vector2(this.offsetX+this.pieceW,this.offsetY+this.pieceH),l=new Phaser.Curves.Line(n,r),d.add(l)):(n=new Phaser.Math.Vector2(this.offsetX+this.pieceW,this.offsetY),r=new Phaser.Math.Vector2(this.offsetX+this.pieceW,this.offsetY+this.pieceH*g),l=new Phaser.Curves.Line(n,r),d.add(l),H=new Phaser.Math.Vector2(this.offsetX+this.pieceW,this.offsetY+this.pieceH*g),z=new Phaser.Math.Vector2(this.offsetX+this.pieceW+s*this.pieceRadius/2,this.offsetY+this.pieceH*f),R=new Phaser.Math.Vector2(this.offsetX+this.pieceW+s*this.pieceRadius,this.offsetY+this.pieceH*m),I=new Phaser.Math.Vector2(this.offsetX+this.pieceW+s*this.pieceRadius/2,this.offsetY+this.pieceH*P),W=new Phaser.Math.Vector2(this.offsetX+this.pieceW,this.offsetY+this.pieceH*u),w=new Phaser.Curves.Spline([H,z,R,I,W]),d.add(w),n=new Phaser.Math.Vector2(this.offsetX+this.pieceW,this.offsetY+this.pieceH*u),r=new Phaser.Math.Vector2(this.offsetX+this.pieceW,this.offsetY+this.pieceH),l=new Phaser.Curves.Line(n,r),d.add(l)),0==h?(n=new Phaser.Math.Vector2(this.offsetX+this.pieceW,this.offsetY+this.pieceH),r=new Phaser.Math.Vector2(this.offsetX,this.offsetY+this.pieceH),l=new Phaser.Curves.Line(n,r),d.add(l)):(n=new Phaser.Math.Vector2(this.offsetX+this.pieceW,this.offsetY+this.pieceH),r=new Phaser.Math.Vector2(this.offsetX+this.pieceW*u,this.offsetY+this.pieceH),l=new Phaser.Curves.Line(n,r),d.add(l),H=new Phaser.Math.Vector2(this.offsetX+this.pieceW*u,this.offsetY+this.pieceH),z=new Phaser.Math.Vector2(this.offsetX+this.pieceW*P,this.offsetY+this.pieceH+h*this.pieceRadius/2),R=new Phaser.Math.Vector2(this.offsetX+this.pieceW*m,this.offsetY+this.pieceH+h*this.pieceRadius),I=new Phaser.Math.Vector2(this.offsetX+this.pieceW*f,this.offsetY+this.pieceH+h*this.pieceRadius/2),W=new Phaser.Math.Vector2(this.offsetX+this.pieceW*g,this.offsetY+this.pieceH),w=new Phaser.Curves.Spline([H,z,R,I,W]),d.add(w),n=new Phaser.Math.Vector2(this.offsetX+this.pieceW*g,this.offsetY+this.pieceH),r=new Phaser.Math.Vector2(this.offsetX,this.offsetY+this.pieceH),l=new Phaser.Curves.Line(n,r),d.add(l)),0==a?(n=new Phaser.Math.Vector2(this.offsetX,this.offsetY+this.pieceH),r=new Phaser.Math.Vector2(this.offsetX,this.offsetY),l=new Phaser.Curves.Line(n,r),d.add(l)):(n=new Phaser.Math.Vector2(this.offsetX,this.offsetY+this.pieceH),r=new Phaser.Math.Vector2(this.offsetX,this.offsetY+this.pieceH*u),l=new Phaser.Curves.Line(n,r),d.add(l),H=new Phaser.Math.Vector2(this.offsetX,this.offsetY+this.pieceH*u),z=new Phaser.Math.Vector2(this.offsetX-a*this.pieceRadius/2,this.offsetY+this.pieceH*P),R=new Phaser.Math.Vector2(this.offsetX-a*this.pieceRadius,this.offsetY+this.pieceH*m),I=new Phaser.Math.Vector2(this.offsetX-a*this.pieceRadius/2,this.offsetY+this.pieceH*f),W=new Phaser.Math.Vector2(this.offsetX,this.offsetY+this.pieceH*g),w=new Phaser.Curves.Spline([H,z,R,I,W]),d.add(w),n=new Phaser.Math.Vector2(this.offsetX,this.offsetY+this.pieceH*g),r=new Phaser.Math.Vector2(this.offsetX,this.offsetY),l=new Phaser.Curves.Line(n,r),d.add(l)),d.closePath(),this.pieceGraphic.beginPath(),d.draw(this.pieceGraphic);const b=d.getPoints();this.pieceGraphic.lineStyle(this.lineWidth,0,1),this.pieceGraphic.fillStyle(this.fillColor,1),this.pieceGraphic.fillPoints(b),1===a&&(e+=this.pieceRadius/2),1===s&&(e-=this.pieceRadius/2),1===i&&(t+=this.pieceRadius/2),1===h&&(t-=this.pieceRadius/2),this.pieceGraphic.closePath(),this.pieceGraphic.setVisible(!1),this.pieceGraphic.setDepth(-2);let y=this.offsetX+this.pieceW,S=this.offsetY+this.pieceH;1===s&&(y+=this.pieceRadius),1===h&&(S+=this.pieceRadius);const M=this.scene.add.renderTexture(0,0,y,S).setVisible(!1);M.draw(this.pieceGraphic),M.saveTexture(`piece_${i}_${s}_${h}_${a}`),this.pieceGraphic.clear()}}class d extends Phaser.Scene{constructor(){super({key:"GameScene"}),this.puzzleW=.6,this.puzzleH=.7,this.topBarSize=.1,this.depthCounter=0,this.pieceLockTolerance=50}init(e){this.gameHeight=this.sys.canvas.height,this.gameWidth=this.sys.canvas.width,this.timer=e.timer,this.timeToComplete=e.timeToComplete,this.piecesSize=e.piecesSize,this.puzzleImage=e.puzzleImage,this.piecePositionHelper=e.piecePositionHelper,this.backgroundPuzzleImage=e.backgroundPuzzleImage,this.movePiecesFreely=e.movePiecesFreely}create(){new l(this,"bg",this.gameWidth,this.gameHeight).setAlpha(.2);var e=new h(this,this.gameWidth,this.gameHeight+this.topBarSize*this.gameHeight,this.puzzleW,this.puzzleH,this.puzzleImage.id,this.backgroundPuzzleImage);const{horizontal:t,vertical:s}=e.calculatePuzzlePieces(this.piecesSize);this.numHorizontalPieces=t,this.numVerticalPieces=s,i.TOTAL_PIECES=t*s;const{width:a,height:c}=e.calculatePieceDimensions(this.numHorizontalPieces,this.numVerticalPieces);let d;this.pieceW=a,this.pieceH=c,this.pieceRadius=(this.pieceW+this.pieceH)/2/3,d=150===this.piecesSize?.05:.1,this.outsidePiecesScale=this.gameWidth*d/this.pieceW,new p(this,this.pieceW,this.pieceH,this.pieceRadius,[-1,0,1]);var g=new o(this,this.numHorizontalPieces,this.numVerticalPieces,this.pieceW,this.pieceH,this.pieceRadius,this.outsidePiecesScale,e.getPiecesBoardDimensions());this.piecesRightCoors=g.generatePiecesInPuzzleBoard(e.getImage(),this.piecePositionHelper,this.backgroundPuzzleImage);const u=g.generateOutsidePieces(e.getImageAux()),f={x:this.pieceH*this.outsidePiecesScale,y:.1*this.gameHeight,width:e.getImage().getBounds().left-this.pieceH*this.outsidePiecesScale,height:this.gameHeight-this.pieceH*this.outsidePiecesScale},m={x:e.getImage().getBounds().right+this.pieceH*this.outsidePiecesScale,y:.1*this.gameHeight,width:this.gameWidth-this.pieceH*this.outsidePiecesScale,height:this.gameHeight-this.pieceH*this.outsidePiecesScale};new n(this,.4*this.pieceW,.4*this.pieceH,f,m,u),this.input.on("dragstart",((e,t)=>this.dragHandlerStart(e,t,u))),this.input.on("drag",((e,t,i,s)=>this.dragHandler(t,i,s,u))),this.input.on("dragend",((e,t)=>this.dragEndHandler(e,t,u))),this.select_sound=this.sound.add("select"),this.drop_sound=this.sound.add("drop_piece"),this.right_sound=this.sound.add("right_place"),this.complete_sound=this.sound.add("complete_puzzle");let P="";this.timer&&(i.TIME=this.timeToComplete,P=`${i.TIME}`,this.timedEvent=this.time.delayedCall(1e3*this.timeToComplete,this.onEventTimeOver,[],this),this.clock=new r(this,this.gameWidth,.1*this.gameHeight),this.clock.updateTime(P))}update(){this.timer&&!i.GAME_OVER&&this.clock.updateTime(`${(this.timeToComplete-this.timedEvent.elapsed/1e3).toFixed(0)}`)}dragHandlerStart(e,t,i){t.setDepth(++this.depthCounter),this.select_sound.play();const s=t.getData("line"),h=t.getData("col");i[s*this.numHorizontalPieces+h].scaleDownPiece(!1)}dragHandler(e,t,i,s){const h=e.getData("line"),a=e.getData("col");s[h*this.numHorizontalPieces+a].setPiecePosition({x:t,y:i})}dragEndHandler(e,t,s){const h=t.getData("line"),a=t.getData("col"),o=s[h*this.numHorizontalPieces+a],c=this.piecesRightCoors[this.numHorizontalPieces*h+a],n={x:o.getPieceImage().getBounds().centerX,y:o.getPieceImage().getBounds().centerY};this.verifyPieceLock(c,n)?(o.setPiecePosition({x:c.x,y:c.y}),o.setPieceDepth(1),this.input.setDraggable(t,!1),t.input.draggable=!1,t.setDepth(1),i.CURRENT_PIECES++,i.CURRENT_PIECES==i.TOTAL_PIECES?(this.complete_sound.play(),i.GAME_OVER=!0,this.scene.launch("GameEndScene",{width:this.gameWidth,height:this.gameHeight,win:!0}),this.timer&&this.clock.cancelAnims()):this.right_sound.play()):(o.scaleDownPiece(!0),this.movePiecesFreely?o.setPiecePosition({x:e.x,y:e.y}):o.setPiecePosition({x:o.getInitCoords().x,y:o.getInitCoords().y}),this.drop_sound.play())}verifyPieceLock(e,t){return t.x>e.x-this.pieceLockTolerance&&t.x<e.x+this.pieceLockTolerance&&t.y>e.y-this.pieceLockTolerance&&t.y<e.y+this.pieceLockTolerance}onEventTimeOver(){console.log("time over"),i.GAME_OVER=!0,this.clock.cancelAnims(),this.scene.launch("GameEndScene",{width:this.gameWidth,height:this.gameHeight,win:!1})}}class g{constructor(e,t,i,s,h,a){this.scene=e,this.barColor=170,this.barStrokeColor=16763904,this.buildMenu(t,i,s,h,a)}buildMenu(e,t,i,s,h){this.menuRect=this.scene.add.graphics(),this.menuRect.beginPath(),this.menuRect.fillStyle(this.barStrokeColor,1),this.menuRect.fillRoundedRect(e-h/2,t-h/2,i+h,s+h,{tl:20,tr:20,bl:20,br:20}),this.menuRect.strokePath(),this.menuRect.closePath(),this.menuRect.beginPath(),this.menuRect.fillStyle(this.barColor,1),this.menuRect.fillRoundedRect(e,t,i,s,{tl:20,tr:20,bl:20,br:20}),this.menuRect.strokePath(),this.menuRect.closePath()}getMenuRect(){return this.menuRect}}class u extends Phaser.Scene{constructor(){super({key:"GameEndScene"})}init(e){this.gameWidth=e.width,this.gameHeight=e.height,this.win=e.win}create(){this.modal=this.add.rectangle(0,0,this.gameWidth,this.gameHeight,0,.6).setOrigin(0);const e=.5*this.gameWidth,t=.5*this.gameHeight,i=this.gameWidth/2-e/2,s=this.gameHeight/2-t/2,h=.015*e;this.menu=new g(this,i,s,e,t,h);let a="";a=this.win?"Parabéns, ganhaste!":"Não conseguiste, tenta outra vez!";let o=this.add.text(0,0,a,{fontFamily:"Arial",fontSize:32,color:"#ffffff",align:"center"});o.setPosition(this.gameWidth/2,s+2*o.height).setOrigin(.5);var c=new Phaser.Geom.Circle(this.gameWidth/2,s+t/2.2,(t-s)/2.1).getPoints(12);let n=0;for(var r=0;r<c.length;r++){var l=c[r];n>c.length-2?n=0:n++;let e=this.add.image(l.x,l.y,"star").setScale(.1).setTint(16763904);this.tweens.add({targets:e,scaleX:.15625,scaleY:.15625,ease:"Sine.easeInOut",duration:1e3,repeat:-1,yoyo:!0})}this.btn=this.add.graphics(),this.btn.fillStyle(16776960,1);const p=e/2,d=t/8,u=this.gameWidth/2-e/4,f=s+.8*t;this.btn.fillRoundedRect(u,f,p,d,24),this.add.text(0,0,"Jogar novamente",{fontFamily:"Arial",fontSize:32,color:"#0000aa",align:"center"}).setPosition(this.gameWidth/2,f+o.height).setOrigin(.5);var m=new Phaser.Geom.Rectangle(u,f,p,d);this.btn.setInteractive(m,Phaser.Geom.Rectangle.Contains),this.btn.on("pointerdown",(()=>{window.location.reload()}))}}const f={type:Phaser.AUTO,parent:"game",backgroundColor:2772329,scale:{width:1600,height:1200,mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},fps:{panicMax:30,target:20,forceSetTimeOut:!0},scene:[t,d,u]};class m extends Phaser.Game{constructor(e){super(e)}}window.addEventListener("load",(()=>{new m(f)}));
